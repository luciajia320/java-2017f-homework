public class Huluwa implements Creature, Comparable{

    private COLOR color;
    private SENIORITY seniority;
    private Position<Creature> position;
    private String name;

    public COLOR getColor() {
        return color;
    }

    public SENIORITY getSeniority() {
        return seniority;
    }


    @Override
    public Position<Creature> getPosition() {
        return position;
    }

    @Override
    public void setPosition(Position<Creature> position) {
        this.position = position;
        switch(this.color) {
            case Ëµ§:
                name = "üçé";break;
            case Ê©ô:
                name = "üçä";break;
            case ÈªÑ:
                name = "üçã";break;
            case Áªø:
                name = "üçè";break;
            case Èùí:
                name = "üåé";break;
            case Ëìù:
                name = "üíß";break;
            case Á¥´:
                name = "üçÜ";break;
        }
        position.setHolder(this);
    }

    Huluwa(COLOR color, SENIORITY seiority) {
        this.color = color;
        this.seniority = seiority;

    }

    @Override
    public void report() {
        System.out.print(this.toString());
    }

    @Override
    public String toString(){
        return this.seniority.toString() + "(" + this.color.toString() + ")@" + this.position.getX() + ","+this.position.getY()+";";
    }

    @Override
    public void show() {
        System.out.print(name);
    }

    @Override
    public boolean biggerThan(Comparable brother){

        if (brother instanceof  Huluwa)
            return this.getSeniority().ordinal()> ((Huluwa) brother).getSeniority().ordinal();
        else
            return false;
    }

}

enum COLOR {
    Ëµ§, Ê©ô, ÈªÑ, Áªø, Èùí, Ëìù, Á¥´
}

enum SENIORITY {
    ‰∏Ä, ‰∫å, ‰∏â, Âõõ, ‰∫î, ÂÖ≠, ‰∏É
}
