
关于本次实验
设计思路：
    个人觉得本次实验最重要的是看懂老师提供的框架代码，该代码中每一个细节看懂了都巧妙的令人惊叹，所以在自己动手前先看了一天的代码，对于代码里面很多细节都
是从刚开始的怀疑到后来对设计思路的巧妙的钦佩。
    首先代码框架的几个类分别是Thing2D、Tile、Player、Field和Ground这几个类型，其中Thing2D和Field是本实验最重要的基类，Thing2D比较简单，就不进行赘述了，
我觉得最应该描述的就是Player和Field两个类。首先是Field，这也是我在本实验中添加方法最多的类了，此类有本游戏最主要的界面，动画，以及流程控制的主要方法，比
如说paint，buildWorld，initworld，还有KeyListenner。我觉得给我启发最多的就是initworld方法中的level字符串，我刚开始一直搞不明白为啥要用字符串来初始化
界面，直到看到复盘的需求，才恍然大悟，利用字符串可以将游戏流程很简洁的记录下来也能很简洁的去进行复盘。其次就是Player类和Field类互为成员变量，刚开始没有看
懂，直到在KeyListenner中看到加入player的线程，并且要求我们将所有角色开一个线程进行多线程移动时，就了解到这种思路是想要保证整个游戏只有一个战场，即就是所
有游戏角色共享同一个field成员，这样才能统一各角色间的变量统一。老师的代码中如此这样巧妙的设计还有很多，就不一一赘述了，在这里先介绍我的思路。
    我在看了游戏的要求之后，感觉双方在战场上全部移动，直到一方全部死亡才能结束，感觉有点乱，于是我决定做一个类似于植物大战僵尸的游戏，可以在游戏开始前在地
图上设置葫芦娃兄弟，然后游戏开始之后葫芦兄弟放技能打妖怪，若有妖怪跑出地图则葫芦娃输，若所有妖怪被消灭，则葫芦娃获胜。
    代码实现上：我基于Player类建立了HuluBro类、BadBoy类和Bullet类，他们最主要的区别就在于run方法不同，全部公用同一个field。然后在field中在Keylistener
中加入一些键盘响应操作，在按下s之后把场上所有的角色的run方法运行起来，然后在paint函数里面调用一个checkworld方法判断不同角色间的位置和受伤情况。这里就涉及到
如何判断不同角色在不同线程运行如何判断他们的相对位置和是否受伤，受的伤害量有多大。在这里我创建了一个Tile类的派生类Position，因为所有线程共用一个field，则我
我可以把战场上每一个单元的信息都储存在field里面，即我将原来的tiles队列换成了Position类型，Position所含的属性除了x,y,image以外，我加上了Boolean类的is_hasThing2D
还有hurt值，以及is_good游戏正反派属性，所以我只需要在所有游戏角色move的时候把之前的位置各属性重置并判断目的位置是否有物体，若没有则移动并设置目的位置的各属性，
而我需要做的就是实现一个用坐标来找到bullet对象，HuluBoy对象和BadBoy对象，以及Position对象就可以了，这样我就可以实现整个战场上的信息一致，并实现碰撞受伤的要求。
    还有一个非常重要的就是复盘程序，我在运行的时候把所有角色的信息都放在了一个String字符串里，如level字符串一样的格式然后进行输出储存，还有一个就是命名，不能
让所有游戏的信息都储存在一个文件里，而如果用变量，那么每次程序启动存的都在一个文件里，于是我想到了随时随地在变的时间，于是，我获取当前的系统时间作为文件名，而复盘
则把自己写出去的文件还原回去，只不过需要播放动画的话需要另开一个线程，所以我把field也加了一个run方法，专门用于复盘。
     以上就是我的设计思路，很多方面都还有不足希望老师多多指教。
操作及功能说明：
    程序开始后，按s进行游戏，在按s之前可以通过鼠标点击地图并按数字键在相应位置添加葫芦娃，1为大娃，以此类推，并且不同葫芦娃发射的子弹不一样，在任意时刻按r
重置本游戏，在游戏进行中按上下左右可以控制主游戏角色进行移动，按a、d可以切换主游戏角色。在游戏开始前或者游戏结束后点击v可以进行选择游戏记录文件进行复盘。
